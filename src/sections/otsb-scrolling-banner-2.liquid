{% liquid 
  assign num_loop = 20
  if section.blocks.size > 3
    assign num_loop = 10
  endif
  if section.blocks.size > 8
    assign num_loop = 6
  endif
  assign duration = section.settings.speed | times: num_loop
%}
{% style %}
  .section-{{ section.id }} {
    --duration : {{ duration }}s;
    --direction: {% if section.settings.direction == 'left' %}reverse{% else %}normal{% endif %};
    {%- unless section.settings.color_text_light.alpha == 0.0 -%}
      --colors-text: {{ section.settings.color_text_light.red }},{{ section.settings.color_text_light.green }},{{ section.settings.color_text_light.blue }};
    {% endunless %}
    --colors-line-and-border: {{ section.settings.color_line.red }}, {{ section.settings.color_line.green }}, {{ section.settings.color_line.blue }};
  }
  .dark .section-{{ section.id }} {
    {%- unless section.settings.color_text_dark.alpha == 0.0 -%}
      --colors-text: {{ section.settings.color_text_dark.red }},{{ section.settings.color_text_dark.green }},{{ section.settings.color_text_dark.blue }};
    {% else %}
      --colors-text: transparent;
    {% endunless %}
  }  
  .section-{{ section.id }} .text-color-secondary {
    {%- unless section.settings.color_text_light_2.alpha == 0.0 -%}
      color: {{ section.settings.color_text_light_2 }};
    {% else %}
      color: #898989;
    {% endunless %}
  }
  .dark .section-{{ section.id }} .text-color-secondary {
    {%- unless section.settings.color_text_dark_2.alpha == 0.0 -%}
      color: {{ section.settings.color_text_dark_2 }};
    {% else %}
      color: #ffffff;
    {% endunless %}
  }
  {% if section.settings.pause_hover %}
    .section-{{ section.id }}:hover .el_animate {
      animation-play-state: paused;
    }
  {% endif %}
  .space-blocks-{{ section.id }} {
    padding-inline-end: {{ section.settings.space_block_mobile }}px;
  }
  .bg-{{ section.id }} {
    background: {{ section.settings.bg_light }};
  }
  .dark .bg-{{ section.id }} {
    {% if section.settings.bg_dark == blank %}
      background: transparent;
    {% else %}
      background: {{ section.settings.bg_dark }};
    {% endif %}
  }
  @media (min-width: 767px){
    .space-blocks-{{ section.id }} {
      padding-inline-end: {{ section.settings.space_block }}px;
    }
  }
{% endstyle %}
{% for block in section.blocks %}
  {%- case block.type -%}
    {%- when 'icon' -%}
      {% style %}
        .icon-{{ block.id }} {
          width: {{ block.settings.height_icon | times: 0.7 }}px;
          height: {{ block.settings.height_icon | times: 0.7 }}px;
        }
        .space-block-{{ block.id }} {
          margin-left: {{ block.settings.spacing_left_mobile }}px;
          margin-right: {{ block.settings.spacing_right_mobile }}px;
        }
        @media (min-width: 767px) {
          .icon-{{ block.id }} {
            width: {{ block.settings.height_icon }}px;
            height: {{ block.settings.height_icon }}px;
          }
          .space-block-{{ block.id }} {
            margin-left: {{ block.settings.spacing_left }}px;
            margin-right: {{ block.settings.spacing_right }}px;
          }
        }
      {% endstyle %}
    {%- when 'image' -%}
      {% if block.settings.image != blank %}
        {% liquid
          assign w_img = block.settings.image.aspect_ratio | times: block.settings.height_image
        %}
        {% style %}
          .img-{{ block.id }} {
            width: {{ w_img }}px;
            height: {{ block.settings.height_image }}px;
          }
          .space-block-{{ block.id }} {
            margin-left: {{ block.settings.spacing_left_mobile }}px;
            margin-right: {{ block.settings.spacing_right_mobile }}px;
          }
          @media (min-width: 767px) {
            .space-block-{{ block.id }} {
              margin-left: {{ block.settings.spacing_left }}px;
              margin-right: {{ block.settings.spacing_right }}px;
            }
          }
        {% endstyle %}
      {% endif %}
    {%- when 'text' -%}
      {% if block.settings.text != blank %}
        {%- liquid
          assign base_size = 100 | times: 0.00875
          assign font_size = block.settings.text_size | times: 0.01 | times: base_size
        -%}
        {%- style -%}
          .text--{{ block.id }} {
            font-size:{{ font_size | times: 0.9 }}rem; 
          }
          .space-block-{{ block.id }} {
            margin-left: {{ block.settings.spacing_left_mobile }}px;
            margin-right: {{ block.settings.spacing_right_mobile }}px;
          }
          @media (min-width: 767px){
            .text--{{ block.id }} {
              font-size: {{ font_size }}rem;
            }
            .space-block-{{ block.id }} {
              margin-left: {{ block.settings.spacing_left }}px;
              margin-right: {{ block.settings.spacing_right }}px;
            }
          }
        {%- endstyle -%}
      {% endif %}
    {%- when 'button' -%}
      {% style %}
        .button--{{ block.id }}.otsb-button-solid,
        .button--{{ block.id }}.otsb-button-solid:before { 
          {%- unless block.settings.color_button.alpha == 0.0 -%}
            --colors-line-and-border: {{ block.settings.color_button.red }}, {{ block.settings.color_button.green }}, {{ block.settings.color_button.blue }};
            --colors-button: {{ block.settings.color_button.red }}, {{ block.settings.color_button.green }}, {{ block.settings.color_button.blue }};
          {%- else -%}
            --colors-line-and-border: var(--colors-button);
          {%- endunless -%}
          {%- unless block.settings.color_button_hover.alpha == 0.0 -%}
            --colors-button-hover: rgb({{ block.settings.color_button_hover.red }}, {{ block.settings.color_button_hover.green }}, {{ block.settings.color_button_hover.blue }});
          {%- endunless -%}
          {%- unless block.settings.color_text_button.alpha == 0.0 -%}
            --colors-button-text: {{ block.settings.color_text_button.red }}, {{ block.settings.color_text_button.green }}, {{ block.settings.color_text_button.blue }};
          {%- endunless -%}
          {%- unless block.settings.color_text_button_hover.alpha == 0.0 -%}
            --colors-button-text-hover: {{ block.settings.color_text_button_hover.red }}, {{ block.settings.color_text_button_hover.green }}, {{ block.settings.color_text_button_hover.blue }};
          {%- endunless -%}
        }
        .button--{{ block.id }}.otsb-button-outline {
          {%- if block.settings.secondary_button_text.alpha != 0.0 -%} 
            --colors-secondary-button: {{ block.settings.secondary_button_text.red }}, {{ block.settings.secondary_button_text.green }}, {{ block.settings.secondary_button_text.blue }}; 
            --colors-line-secondary-button: {{ block.settings.secondary_button_text.red }}, {{ block.settings.secondary_button_text.green }}, {{ block.settings.secondary_button_text.blue }}; 
            --background-secondary-button: transparent;
          {% endif %}
          {%- if block.settings.color_button_secondary.alpha != 0.0 -%} 
            --background-secondary-button: {{ block.settings.color_button_secondary.red }}, {{ block.settings.color_button_secondary.green }}, {{ block.settings.color_button_secondary.blue }}; 
            --colors-line-secondary-button: {{ block.settings.color_button_secondary.red }}, {{ block.settings.color_button_secondary.green }}, {{ block.settings.color_button_secondary.blue }}; 
          {% endif %}
        }
        .space-block-{{ block.id }} {
          margin-left: {{ block.settings.spacing_left_mobile }}px;
          margin-right: {{ block.settings.spacing_right_mobile }}px;
        }
        @media (min-width: 767px) {
          .space-block-{{ block.id }} {
            margin-left: {{ block.settings.spacing_left }}px;
            margin-right: {{ block.settings.spacing_right }}px;
          }
        }
      {% endstyle %}
  {% endcase %}
{% endfor %}
{% capture content %}
  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when 'icon' -%}
        <div class="space-blocks-{{ section.id }} space-block-{{ block.id }} flex whitespace-nowrap">
          <span class="inline-block icon-{{ block.id }} text-color-{{ block.settings.icon_color }}">
            {% if block.settings.custom_icon == blank %}
              {% render 'otsb-icon-labels-bags', icon: block.settings.icon %}
            {% else %}
              {{ block.settings.custom_icon }}
            {% endif %}
          </span>
        </div>
      {%- when 'image' -%}
        {% liquid
          assign w_img = block.settings.image.aspect_ratio | times: block.settings.height_image
        %}
        <div class="h-full w-max flex items-center space-blocks-{{ section.id }} space-block-{{ block.id }} whitespace-nowrap">
          <div class="img-{{ block.id }} overflow-hidden relative{% if block.settings.edges_type == 'rounded_corners' %} rounded-[10px]{% endif %}">
            {% if block.settings.image != blank %}
              <img
                class="w-full h-full absolute top-0 left-0"
                src="{{ block.settings.image | image_url: width: w_img }}"
                alt="{{ block.settings.image.alt | escape }}"
                loading="lazy"  
                width="{{ w_img }}"
                height="{{ block.settings.height_image }}"
              >
            {% else %}
              {% style %}
                .image-block-{{ block.id }} {
                  height: {{  block.settings.height_image }}px;
                }
              {% endstyle %}
              {% assign class = 'w-[120px] bg-[#C9C9C9] text-[#acacac] image-block-' | append: block.id %}
              {{ 'image' | placeholder_svg_tag: class }}
            {% endif %}
          </div>
        </div>
      {%- when 'text' -%}
        {% if block.settings.text != blank %}
          <div class="min-w-max space-blocks-{{ section.id }} space-block-{{ block.id }} whitespace-nowrap text-color-{{ block.settings.text_color }}">
            <p class="empty:otsb-hidden text--{{ block.id }} font-medium">{{ block.settings.text | escape }}</p>
          </div>
        {% endif %}
      {%- when 'button' -%}
        {% if block.settings.button_label != blank %}
          <div class="x-button-{{ block.id }} min-w-max space-blocks-{{ section.id }} space-block-{{ block.id }} whitespace-nowrap">
            {%- if block.settings.button_link != blank -%}
              <a 
                href="{{ block.settings.button_link }}"
                class="disable-effect" 
                tabindex="-1"
                {% if block.settings.open_new_window %}target="_blank"{% endif %}
              >
            {%- endif -%}
              {% comment %} Button design {% endcomment %}
                {%- liquid
                  case block.settings.button_type
                    when 'rounded'
                      assign borderRadius = '100px'
                    when 'rounded_corners'
                      assign borderRadius = '6px'
                    when 'mixed'
                      assign borderRadius = '6px 0 6px 0'
                    else
                      assign borderRadius = '0'
                  endcase
                %}
                {% style %}
                  .x-button-{{ block.id }} .button--{{ block.id }} {
                    --border-radius: {{ borderRadius }};
                    {% if block.settings.button_animation == 'slide' %}
                      --button-width: 102%;
                      --button-height: 500%;
                      --button-transform: rotate3d(0,0,1,-10deg) translate3d(-130%,-10em,0);
                      --button-transform-origin: 100% 0%;
                    {% elsif block.settings.button_animation == 'fill_up' %}
                      --button-width: 120%;
                      --button-height: 100%;
                      --button-transform: rotate3d(0,0,1,10deg) translate3d(-1.2em,110%,0);
                      --button-transform-origin: 0% 100%;
                    {% endif %}
                  }

                  {% if block.settings.button_color_mobile == "hover" %}
                    .x-button-{{ block.id }} [role="button"], .x-button-{{ block.id }} [type="button"], .x-button-{{ block.id }} .otsb-button {
                      color: rgb(var(--colors-button-text-hover));
                    }
                    .x-button-{{ block.id }} button.otsb-button-solid, .x-button-{{ block.id }} .otsb-button.otsb-button-solid {
                      border: none;
                      background-color: var(--colors-button-hover);
                    }
                    .x-button-{{ block.id }} button.otsb-button-disable-effect, .x-button-{{ block.id }} .otsb-button.otsb-button-disable-effect {
                      color: rgba(var(--colors-button-text-hover));
                      background-color: var(--colors-button-hover);
                    }
                    .x-button-{{ block.id }} .otsb-button-action {
                      border: none;
                      color: rgba(var(--colors-button-text-hover));
                      background-color: var(--colors-button-hover);
                    }
                  {% else %}
                    .x-button-{{ block.id }} [role="button"], .x-button-{{ block.id }} [type="button"], .x-button-{{ block.id }} .otsb-button {
                      color: rgb(var(--colors-button-text));
                    }
                    .x-button-{{ block.id }} button.otsb-button-solid, .x-button-{{ block.id }} .otsb-button.otsb-button-solid {
                      border: none;
                      background-color: rgba(var(--colors-button));
                    }
                    .x-button-{{ block.id }} button.otsb-button-disable-effect, .x-button-{{ block.id }} .otsb-button.otsb-button-disable-effect {
                      color: rgb(var(--colors-button-text));
                      background-color: rgba(var(--colors-button));
                    }
                    .x-button-{{ block.id }} .otsb-button-action {
                      border: none;
                      color: rgb(var(--colors-button-text));
                      background-color: rgba(var(--colors-button));
                    }
                  {% endif %}
                    .x-button-{{ block.id }} [role="button"], .x-button-{{ block.id }} [type="button"], .x-button-{{ block.id }} .otsb-button {
                      direction: ltr;
                    }

                    {% if block.settings.button_animation == 'sliced' %}
                      .x-button-{{ block.id }} .otsb-button.otsb-button-outline:not(.not-icon), .x-button-{{ block.id }} .otsb-button.otsb-button-solid:not(.not-icon) {
                        display: inline-flex;
                        align-items: center;
                        justify-content: center;
                        padding-left: 1.5rem;
                        padding-right: 1.5rem;
                      }
                      .x-button-{{ block.id }} .otsb-button-solid .otsb-button-icon, .x-button-{{ block.id }} .otsb-button-solid .otsb-button-text {
                        transition-timing-function: cubic-bezier(0,.71,.4,1);
                      }
                      .x-button-{{ block.id }} .otsb-button-solid .otsb-button-icon {
                        transition: opacity .25s,transform .5s;
                      }
                      .x-button-{{ block.id }} .otsb-button-solid .otsb-button-text {
                        transition: transform .5s;
                        transform: translateX(0.625rem);
                      }
                      .x-button-{{ block.id }} .otsb-button-solid:hover .otsb-button-text {
                        opacity: 1;
                        transform: translateX(0px);
                      }
                      .x-button-{{ block.id }} .otsb-button-solid:hover .otsb-button-icon {
                        opacity: 1;
                        transform: translateX(0.3125rem);
                      }
                    {% endif %}
                    {% if block.settings.button_animation == 'underline' %}
                      .x-button-{{ block.id }} .otsb-button-solid .otsb-button-text {
                        position: relative;
                        display: block;
                      }
                      .x-button-{{ block.id }} .otsb-button-solid .otsb-button-text::after {
                        content: "";
                        pointer-events: none;
                        bottom: 1px;
                        left: 50%;
                        position: absolute;
                        width: 0%;
                        height: 1px;
                        background-color: rgba(var(--colors-button-text));
                        transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
                        transition-duration: 400ms;
                        transition-property: width, left;
                      }
                      .x-button-{{ block.id }} .otsb-button-solid:hover .otsb-button-text::after {
                        {% if block.settings.button_color_mobile == "hover" %}
                          background-color: rgba(var(--colors-button-text-hover));
                        {% else %}
                          background-color: rgba(var(--colors-button-text));
                        {% endif %}
                          width: 100%;
                          left: 0%;
                      }
                    {% endif %}

                    @media (min-width: 1024px){
                      .x-button-{{ block.id }} [role="button"], .x-button-{{ block.id }} [type="button"], .x-button-{{ block.id }} .otsb-button { 
                        color: rgba(var(--colors-button-text));
                      }
                      .x-button-{{ block.id }} button.otsb-button-solid, .x-button-{{ block.id }} .otsb-button.otsb-button-solid {
                        border: none;
                        box-shadow: none;
                        color: rgb(var(--colors-button-text));
                        background-color: rgba(var(--colors-button));
                        overflow: hidden;
                        background-origin: border-box;
                      }
                      .x-button-{{ block.id }} button.otsb-button-solid:hover, .x-button-{{ block.id }} .otsb-button.otsb-button-solid:hover {
                        {% if block.settings.button_animation == 'sliced' or block.settings.button_animation == 'underline' %}
                          transition-duration: 0.2s;
                        {% else %}
                          transition-delay: 0.5s;
                        {% endif %}
                          transition-property: background-color;
                          background-color: var(--colors-button-hover);
                          color: rgba(var(--colors-button-text-hover));
                          background-origin: border-box;
                      }
                      .x-button-{{ block.id }} .otsb-button-action {
                        border: none;
                        color: rgba(var(--colors-button-text-hover));
                        background-color: var(--colors-button-hover);
                      }
                      .x-button-{{ block.id }} button.otsb-button-disable-effect, .x-button-{{ block.id }} .otsb-button.otsb-button-disable-effect {
                        color: rgb(var(--colors-button-text));
                        background-color: rgba(var(--colors-button));
                      }
                      .x-button-{{ block.id }} button.otsb-button-disable-effect:hover, .x-button-{{ block.id }} .otsb-button.otsb-button-disable-effect:hover {
                        color: rgba(var(--colors-button-text-hover));
                        background-color: var(--colors-button-hover);
                      }
                      {% if block.settings.button_animation == 'slide' or block.settings.button_animation == 'fill_up' %}
                        .x-button-{{ block.id }} button.otsb-button-solid:before, .x-button-{{ block.id }} .otsb-button.otsb-button-solid:before {
                          content: "";
                          z-index: -1;
                          position: absolute;
                          top: 0;
                          right: 0;
                          bottom: 0;
                          left: 0;
                          width: var(--button-width);
                          height: var(--button-height);
                          background-color: var(--colors-button-hover);
                          backface-visibility: hidden;
                          will-change: transform;
                          transform: var(--button-transform);
                          transform-origin: var(--button-transform-origin);
                          transition: transform 0.5s ease;
                        }
                        .x-button-{{ block.id }} button.otsb-button-solid:hover:before, .x-button-{{ block.id }} .otsb-button.otsb-button-solid:hover:before {
                          transform: rotate3d(0,0,1,0) translateZ(0);
                        }
                      {% endif %}
                      {% if block.settings.button_animation == 'underline' %}
                        .x-button-{{ block.id }} .otsb-button-solid:hover .otsb-button-text::after {
                          background-color: rgba(var(--colors-button-text-hover));
                        }
                      {% endif %}
                    }
                {% endstyle %}
              {% comment %} End button design {% endcomment %}
              <div class="otsb-button button--{{ block.id }}{% if block.settings.primary_button %} otsb-button-solid{% else %} otsb-button-outline{% endif %} empty:otsb-hidden leading-normal text-center mt-1 mb-1 lg:mt-0 lg:mb-0 lg:ml-0 lg:mr-0 h-full pl-7 pr-7 lg:pl-9 lg:pr-9 pt-2.5 pb-2.5 md:pt-3 md:pb-3{% unless block.settings.button_link != blank %} opacity-70 hover:cursor-not-allowed{% endunless %}">
                {% render 'otsb-button-label', button_animation: block.settings.button_animation, custom_icon_button: block.settings.custom_icon_button, button_label: block.settings.button_label, show_button_primary: block.settings.primary_button %}
              </div>
            {%- if block.settings.button_link != blank -%}
              </a>
            {%- endif -%}
          </div>
        {% endif %}
    {% endcase %}
  {% endfor %}
{% endcapture %}

<div x-data x-intersect.once.margin.200px="$store.xScrollPromotion.load($el)" class="bg-{{ section.id }} text-[rgb(var(--colors-text))] section-{{ section.id }}{% if section.settings.show_border %} border-y border-solid{% endif %} pb-[{{ section.settings.padding_bottom_mobile }}px] pt-[{{ section.settings.padding_top_mobile }}px] md:pb-[{{ section.settings.padding_bottom }}px] md:pt-[{{ section.settings.padding_top }}px] ltr">
  <div class="w-full overflow-hidden">
    <div class="flex flex-nowrap whitespace-nowrap min-w-full">
      {% for i in (1..2) %}
        <div class="flex shrink-0 min-w-full whitespace-nowrap items-center el_animate">
          {% for i in (1..num_loop) %}
            {{ content }}
          {% endfor %}
        </div>
      {% endfor %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "OT: Scrolling Promo #2",
  "class": "section section-scroll-banner x-section",
  "tag": "section",
  "disabled_on": {
    "groups": [
      "header",
      "footer",
      "aside"
    ]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "show_border",
      "default": true,
      "label": "Show section borders"
    },
    {
      "type": "color",
      "id": "color_line",
      "label": "Line and borders"
    },
    {
      "type": "header",
      "content": "Scrolling"
    },
    {
      "type": "range",
      "id": "speed",
      "min": 6,
      "max": 50,
      "step": 2,
      "unit": "s",
      "label": "Speed",
      "default": 10
    },
    {
      "type": "select",
      "id": "direction",
      "options": [
        {
          "value": "left",
          "label": "Left to right"
        },
        {
          "value": "right",
          "label": "Right to left"
        }
      ],
      "default": "right",
      "label": "Direction"
    },
    {
      "type": "checkbox",
      "id": "pause_hover",
      "default": true,
      "label": "Pause on hover"
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "color",
      "id": "bg_light",
      "label": "Background color",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "color_text_light",
      "label": "Primary color",
      "default": "#f96f96"
    },
    {
      "type": "color",
      "id": "color_text_light_2",
      "label": "Secondary color",
      "default": "#32355d"
    },
    {
      "type": "header",
      "content": "Desktop layout"
    },
    {
      "type": "range",
      "id": "space_block",
      "min": 10,
      "max": 150,
      "step": 5,
      "unit": "px",
      "label": "Block spacing",
      "default": 45
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 12
    },
    {
      "type": "header",
      "content": "Mobile layout"
    },
    {
      "type": "range",
      "id": "space_block_mobile",
      "min": 10,
      "max": 150,
      "step": 5,
      "unit": "px",
      "label": "Block spacing",
      "default": 45
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 12
    }
  ],
  "max_blocks": 16,
  "blocks": [
    {
      "type": "icon",
      "name": "Icon",
      "settings": [
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "activity",
              "label": "Activity"
            },
            {
              "value": "archive",
              "label": "Archive"
            },
            {
              "value": "arrow-down-cricle",
              "label": "Arrow down circle"
            },
            {
              "value": "arrow-left",
              "label": "Arrow left"
            },
            {
              "value": "arrow-left-circle",
              "label": "Arrow left circle"
            },
            {
              "value": "arrow-right",
              "label": "Arrow right"
            },
            {
              "value": "arrow-right-circle",
              "label": "Arrow right circle"
            },
            {
              "value": "arrow-up-circle",
              "label": "Arrow up circle"
            },
            {
              "value": "chevron-left",
              "label": "Chevron left"
            },
            {
              "value": "trending-down",
              "label": "Trending down"
            },
            {
              "value": "tv",
              "label": "TV"
            },
            {
              "value": "trending-up",
              "label": "Trending up"
            },
            {
              "value": "zap",
              "label": "Zap"
            },
            {
              "value": "1st-medal",
              "label": "1st medal"
            },
            {
              "value": "award",
              "label": "Award"
            },
            {
              "value": "bicycle",
              "label": "Bicycle"
            },
            {
              "value": "box",
              "label": "Box"
            },
            {
              "value": "briefcase",
              "label": "Briefcase"
            },
            {
              "value": "calendar",
              "label": "Calendar"
            },
            {
              "value": "camera",
              "label": "Camera"
            },
            {
              "value": "chat-bubble",
              "label": "Chat bubble"
            },
            {
              "value": "check-mark",
              "label": "Check mark"
            },
            {
              "value": "clock",
              "label": "Clock"
            },
            {
              "value": "cloud-rain",
              "label": "Cloud rain"
            },
            {
              "value": "coffee",
              "label": "Coffee"
            },
            {
              "value": "coin",
              "label": "Coin"
            },
            {
              "value": "credit-card",
              "label": "Credit card"
            },
            {
              "value": "delivery-truck",
              "label": "Delivery truck"
            },
            {
              "value": "dollar-sign",
              "label": "Dollar sign"
            },
            {
              "value": "earth",
              "label": "Earth"
            },
            {
              "value": "eye",
              "label": "Eye"
            },
            {
              "value": "feather",
              "label": "Feather"
            },
            {
              "value": "fire",
              "label": "Fire"
            },
            {
              "value": "flower",
              "label": "Flower"
            },
            {
              "value": "gift",
              "label": "Gift"
            },
            {
              "value": "globe",
              "label": "Globe"
            },
            {
              "value": "heart",
              "label": "Heart"
            },
            {
              "value": "iron",
              "label": "Iron"
            },
            {
              "value": "leaf",
              "label": "Leaf"
            },
            {
              "value": "lock",
              "label": "Lock"
            },
            {
              "value": "map-pin",
              "label": "Map pin"
            },
            {
              "value": "megaphone",
              "label": "Megaphone"
            },
            {
              "value": "message-text",
              "label": "Message text"
            },
            {
              "value": "music",
              "label": "Music"
            },
            {
              "value": "packages",
              "label": "Packages"
            },
            {
              "value": "pants",
              "label": "Pants"
            },
            {
              "value": "percent",
              "label": "Percent"
            },
            {
              "value": "piggy-bank",
              "label": "Piggy bank"
            },
            {
              "value": "plane",
              "label": "Plane"
            },
            {
              "value": "planet",
              "label": "Planet"
            },
            {
              "value": "question-mark",
              "label": "Question mark"
            },
            {
              "value": "rocket",
              "label": "Rocket"
            },
            {
              "value": "rules",
              "label": "Rules"
            },
            {
              "value": "scissors",
              "label": "Scissors"
            },
            {
              "value": "settings",
              "label": "Settings"
            },
            {
              "value": "shirt",
              "label": "Shirt"
            },
            {
              "value": "shop-alt",
              "label": "Shop"
            },
            {
              "value": "shopping-bag",
              "label": "Shopping bag"
            },
            {
              "value": "shopping-cart",
              "label": "Shopping cart"
            },
            {
              "value": "smile",
              "label": "Smile"
            },
            {
              "value": "star",
              "label": "Star"
            },
            {
              "value": "sun",
              "label": "Sun"
            },
            {
              "value": "tag",
              "label": "Tag"
            },
            {
              "value": "truck",
              "label": "Truck"
            },
            {
              "value": "wallet",
              "label": "Wallet"
            },
            {
              "value": "washing",
              "label": "Washing"
            },
            {
              "value": "yoga",
              "label": "Yoga"
            }
          ],
          "default": "delivery-truck",
          "label": "Icon"
        },
        {
          "type": "html",
          "id": "custom_icon",
          "label": "Custom icon (SVG code)",
          "info": "For assistance with custom SVG code or fixing issues that arise from custom SVG code, please [contact our support](https://support.bsscommerce.com/support/tickets/new)."
        },
        {
          "type": "range",
          "id": "height_icon",
          "min": 20,
          "max": 150,
          "step": 5,
          "unit": "px",
          "label": "Icon height",
          "default": 20
        },
        {
          "type": "radio",
          "id": "icon_color",
          "label": "Icon color",
          "default": "primary",
          "options": [
            {
              "value": "primary",
              "label": "Primary color"
            },
            {
              "value": "secondary",
              "label": "Secondary color"
            }
          ]
        },
        {
          "type": "header",
          "content": "Desktop layout"
        },
        {
          "type": "range",
          "id": "spacing_left",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Left spacing",
          "default": 0
        },
        {
          "type": "range",
          "id": "spacing_right",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Right spacing",
          "default": 0
        },
        {
          "type": "header",
          "content": "Mobile layout"
        },
        {
          "type": "range",
          "id": "spacing_left_mobile",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Left spacing",
          "default": 0
        },
        {
          "type": "range",
          "id": "spacing_right_mobile",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Right spacing",
          "default": 0
        }
      ]
    },
    {
      "type": "text",
      "name": "Text",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Free Shipping",
          "label": "Text"
        },
        {
          "type": "range",
          "id": "text_size",
          "min": 50,
          "max": 200,
          "unit": "%",
          "step": 10,
          "default": 150,
          "label": "Text size"
        },
        {
          "type": "radio",
          "id": "text_color",
          "label": "Text color",
          "default": "secondary",
          "options": [
            {
              "value": "primary",
              "label": "Primary color"
            },
            {
              "value": "secondary",
              "label": "Secondary color"
            }
          ]
        },
        {
          "type": "header",
          "content": "Desktop layout"
        },
        {
          "type": "range",
          "id": "spacing_left",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Left spacing",
          "default": 0
        },
        {
          "type": "range",
          "id": "spacing_right",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Right spacing",
          "default": 0
        },
        {
          "type": "header",
          "content": "Mobile layout"
        },
        {
          "type": "range",
          "id": "spacing_left_mobile",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Left spacing",
          "default": 0
        },
        {
          "type": "range",
          "id": "spacing_right_mobile",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Right spacing",
          "default": 0
        }
      ]
    },
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "height_image",
          "min": 20,
          "max": 150,
          "step": 5,
          "unit": "px",
          "label": "Image height",
          "default": 80
        },
        {
          "type": "select",
          "id": "edges_type",
          "label": "Edges",
          "options": [
            {
              "value": "square",
              "label": "Square"
            },
            {
              "value": "rounded_corners",
              "label": "Rounded corners"
            }
          ],
          "default": "rounded_corners"
        },
        {
          "type": "header",
          "content": "Desktop layout"
        },
        {
          "type": "range",
          "id": "spacing_left",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Left spacing",
          "default": 0
        },
        {
          "type": "range",
          "id": "spacing_right",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Right spacing",
          "default": 0
        },
        {
          "type": "header",
          "content": "Mobile layout"
        },
        {
          "type": "range",
          "id": "spacing_left_mobile",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Left spacing",
          "default": 0
        },
        {
          "type": "range",
          "id": "spacing_right_mobile",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Right spacing",
          "default": 0
        }
      ]
    },
    {
      "type": "button",
      "name": "Button",
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "default": "Button label",
          "label": "Button label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button link"
        },
        {
          "type": "checkbox",
          "id": "open_new_window",
          "default": false,
          "label": "Open this link in a new window"
        },
        {
          "type": "checkbox",
          "id": "primary_button",
          "default": true,
          "label": "Show as primary button"
        },
        {
          "type": "color",
          "id": "color_button",
          "label": "Button color",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "color_button_hover",
          "label": "Button hover color",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "color_text_button",
          "label": "Button text color",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "color_text_button_hover",
          "label": "Button text hover color",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "color_button_secondary",
          "label": "Secondary button color",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "color",
          "id": "secondary_button_text",
          "default": "rgba(0,0,0,0)",
          "label": "Secondary button text color"
        },
        {
          "type": "header",
          "content": "Button Design"
        },
        {
          "type": "select",
          "id": "button_type",
          "options": [
            {
              "value": "square",
              "label": "Square"
            },
            {
              "value": "rounded",
              "label": "Rounded"
            },
            {
              "value": "rounded_corners",
              "label": "Rounded Corners"
            },
            {
              "value": "mixed",
              "label": "Mixed"
            }
          ],
          "label": "Button style",
          "default": "square"
        },
        {
          "type": "select",
          "id": "button_color_mobile",
          "options": [
            {
              "value": "hover",
              "label": "Use button hover color"
            },
            {
              "value": "color",
              "label": "Use button color"
            }
          ],
          "label": "Mobile primary button style",
          "default": "color"
        },
        {
          "type": "select",
          "id": "button_animation",
          "options": [
            {
              "value": "slide",
              "label": "Slide"
            },
            {
              "value": "fill_up",
              "label": "Fill up"
            },
            {
              "value": "sliced",
              "label": "Sliced with icon"
            },
            {
              "value": "underline",
              "label": "Underline"
            }
          ],
          "label": "Primary button hover animation",
          "default": "fill_up"
        },
        {
          "type": "html",
          "id": "custom_icon_button",
          "label": "Custom icon (SVG code)",
          "info": "Applies to 'Sliced with icon' animation type. For assistance with custom SVG code or fixing issues that arise from custom SVG code, please [contact our support](https://support.bsscommerce.com/support/tickets/new)."
        },
        {
          "type": "header",
          "content": "Desktop layout"
        },
        {
          "type": "header",
          "content": "Desktop layout"
        },
        {
          "type": "range",
          "id": "spacing_left",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Left spacing",
          "default": 0
        },
        {
          "type": "range",
          "id": "spacing_right",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Right spacing",
          "default": 0
        },
        {
          "type": "header",
          "content": "Mobile layout"
        },
        {
          "type": "range",
          "id": "spacing_left_mobile",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Left spacing",
          "default": 0
        },
        {
          "type": "range",
          "id": "spacing_right_mobile",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "px",
          "label": "Right spacing",
          "default": 0
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "OT: Scrolling Promo #2",
      "blocks": [
        {
          "type": "text"
        },
        {
          "type": "icon"
        }
      ]
    }
  ]
}
{% endschema %}